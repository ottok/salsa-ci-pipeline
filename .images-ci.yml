# Copyright salsa-ci-team and others
# SPDX-License-Identifier: FSFAP
# Copying and distribution of this file, with or without modification, are
# permitted in any medium without royalty provided the copyright notice and
# this notice are preserved. This file is offered as-is, without any warranty.

clean images:
  stage: clean
  image: docker:latest
  services:
    - docker:19.03.5-dind
  variables:
    IMAGES_LIST: 'aptly autopkgtest base blhc gbp piuparts reprotest dockerbuilder lintian generic_tests'
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - wget -O /usr/bin/reg https://github.com/genuinetools/reg/releases/download/v0.13.0/reg-linux-amd64
    - chmod +x /usr/bin/reg
  script:
    - |
        # If not master, use REF as staging tag.
        if ! [ "${CI_COMMIT_REF_NAME}" = "master" ]; then
          STAGING_TAG="_${CI_COMMIT_REF_NAME}"
        fi
    - |
        for IMAGE in $IMAGES_LIST; do
          reg --registry ${CI_REGISTRY} rm ${CI_PROJECT_PATH}/${IMAGE}:${RELEASE}${STAGING_TAG} || true
        done
  when: always
  except:
    variables:
      - $TEST_PIPELINE
      - $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $SALSA_CI_PERSIST_IMAGES =~ /^(1|yes|true)$/

.build_template: &build_template
  stage: images
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - mkdir -p /kaniko/.docker ${SALSA_CI_CACHE_DOCKER_IMAGES}
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  cache:
    paths:
      - ${SALSA_CI_CACHE_DOCKER_IMAGES}
  script:
    - cd images
    - |
        # If not master, use REF as staging tag.
        if ! [ "${CI_COMMIT_REF_NAME}" = "master" ]; then
          STAGING_TAG="_${CI_COMMIT_REF_NAME}"
        fi
    - |
        if [ -z ${BASE_IMAGE} ]; then
          BASE_IMAGE=${VENDOR}:${RELEASE}
        fi
    - IMAGE_NAME=$(echo ${CI_JOB_NAME} | awk -F':' '{ print $2 }')
    - IMAGE_NAME_WITH_TAG=${IMAGE_NAME}:${RELEASE}${STAGING_TAG}
    - IMAGE_URL=${CI_REGISTRY_IMAGE}/${IMAGE_NAME_WITH_TAG}
    - |
        # Render Dockerfile.
        cat $(ls -v dockerfiles/base.*) > Dockerfile
        if ! [ "${IMAGE_NAME}" = "base" ]; then
            cat $(ls -v dockerfiles/$IMAGE_NAME.*) >> Dockerfile
        fi
    - |
        # Build !
        /kaniko/executor --context ${PWD} \
                  --dockerfile ${PWD}/Dockerfile \
                  --build-arg VENDOR=${VENDOR} \
                  --build-arg RELEASE=${RELEASE} \
                  --build-arg BASE_IMAGE=${BASE_IMAGE} \
                  --cache \
                  --cache-dir ${SALSA_CI_CACHE_DOCKER_IMAGES} \
                  --destination ${IMAGE_URL}
    - |
        # Check if aliases are needed.
        if [ "${CI_COMMIT_REF_NAME}" = "master" ]; then
          case "$VENDOR" in
            debian)
                ALIASES=$(wget -O - http://deb.debian.org/debian/dists/${RELEASE}/Release | awk "/^Suite:/ { if (\$2 !~ /${RELEASE}/) print \$2 }")
                test "$ALIASES" != 'unstable' || ALIASES="${ALIASES} latest"
            ;;
            kali)
                test "$RELEASE" != "kali-dev" || ALIASES="${ALIASES} latest"
            ;;
          esac
        fi
    - |
        #Push the aliases.
        for ALIAS in $ALIASES; do
          ALIAS_IMAGE=${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${ALIAS}${STAGING_TAG}
          /kaniko/executor --context ${PWD} \
                    --dockerfile ${PWD}/Dockerfile \
                    --build-arg VENDOR=${VENDOR} \
                    --build-arg RELEASE=${RELEASE} \
                    --build-arg BASE_IMAGE=${BASE_IMAGE} \
                    --cache \
                    --cache-dir ${SALSA_CI_CACHE_DOCKER_IMAGES} \
                    --destination ${ALIAS_IMAGE}
        done
  except:
    variables:
      - $TEST_PIPELINE

.trigger_build: &trigger_build
  stage: deploy
  image: debian:unstable
  before_script:
    - apt-get update && apt-get install python3 python3-gitlab -y
  script:
    - ./trigger_and_wait.py --release $RELEASES_LIST
  except:
    variables:
      - $IS_A_CHILD_PIPELINE
  only:
    variables:
      - $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $SALSA_CI_PERSIST_IMAGES =~ /^(1|yes|true)$/
      - $BUILD_ALL_IMAGES
