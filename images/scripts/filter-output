#! /usr/bin/python3
# Copyright salsa-ci-team and others
# SPDX-License-Identifier: FSFAP
# Copying and distribution of this file, with or without modification, are
# permitted in any medium without royalty provided the copyright notice and
# this notice are preserved. This file is offered as-is, without any warranty.

import sys
import os
import time

DOT_EVERY_S = int(os.environ.get('DOT_EVERY_S', 60))
MAX_STDOUT_BYTES = int(os.environ.get('MAX_STDOUT_BYTES', 4 * 1024 * 1024))
HEAD_TAIL_PROPORTION = float(os.environ.get('HEAD_TAIL_PROPORTION', 0.8))
OUTPUT_PATH = os.environ.get('WORKING_DIR', '.')
OUTPUT_FILENAME = os.environ.get('OUTPUT_FILENAME', 'output.log')

HEAD_BYTES = MAX_STDOUT_BYTES * HEAD_TAIL_PROPORTION
TAIL_BYTES = MAX_STDOUT_BYTES * (1 - HEAD_TAIL_PROPORTION)

byte_counter = 0
stdout_truncated = False
last_time_dot = time.monotonic()

output_filepath = os.path.join(OUTPUT_PATH, OUTPUT_FILENAME)

with open(output_filepath, 'w') as output_file:
    for line in sys.stdin:
        byte_counter += len(line)
        output_file.write(line)
        if byte_counter <= HEAD_BYTES:
            sys.stdout.write(line)
        else:
            if (time.monotonic() - last_time_dot) >= DOT_EVERY_S:
                last_time_dot = time.monotonic()
                print('.', end='')
            if not stdout_truncated:
                stdout_truncated = True
                print('#' * 120)
                print('# WARNING stdout has been truncated')
                print('#' * 120)

if stdout_truncated:
    print()
    print('#' * 120)
    print(f'# WARNING showing the last {TAIL_BYTES} bytes')
    print('#' * 120)
    with open(output_filepath) as fh:
        fh.seek(0, os.SEEK_END)
        fh.seek(max(fh.tell() - TAIL_BYTES, 0), os.SEEK_SET)
        print(fh.read())
